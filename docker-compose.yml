version: "3.8"

services:
    # Main application
    app:
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - "8000:8000"
        environment:
            - SERVER_HOST=0.0.0.0
            - SERVER_PORT=8000
            - DB_HOST=postgres
            - DB_PORT=5432
            - DB_USER=postgres
            - DB_PASSWORD=postgres
            - DB_NAME=myapp
            - DB_SSLMODE=disable
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - LOG_LEVEL=info
            - LOG_FORMAT=json
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_healthy
        networks:
            - app-network
        restart: unless-stopped

    # PostgreSQL database
    postgres:
        image: postgres:15-alpine
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: myapp
        ports:
            - "5432:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
            - ./migrations:/docker-entrypoint-initdb.d
        networks:
            - app-network
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 10s
            timeout: 5s
            retries: 5
        restart: unless-stopped

    # Redis cache
    redis:
        image: redis:7-alpine
        ports:
            - "6379:6379"
        volumes:
            - redis_data:/data
        networks:
            - app-network
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            timeout: 5s
            retries: 5
        restart: unless-stopped
        
volumes:
    postgres_data:
        driver: local
    redis_data:
        driver: local

networks:
    app-network:
        driver: bridge
